(require 'meow)
(defun jst/meow-yank()
  (interactive)
  (if (region-active-p)
  (meow-replace)
    (meow-yank)))

(defun meow-setup ()
    (setq meow-cheatsheet-layout meow-cheatsheet-layout-qwerty)
    (meow-motion-overwrite-define-key
     '("j" . meow-next)
     '("k" . meow-prev)
     '("<escape>" . ignore))
    (meow-leader-define-key
     '("<SPC>" . execute-extended-command)
     ;; SPC j/k will run the original command in MOTION state.
     '("j" . "H-j")
     '("k" . "H-k")
     ;; Use SPC (0-9) for digit arguments.
     '("1" . meow-digit-argument)
     '("2" . meow-digit-argument)
     '("3" . meow-digit-argument)
     '("4" . meow-digit-argument)
     '("5" . meow-digit-argument)
     '("6" . meow-digit-argument)
     '("7" . meow-digit-argument)
     '("8" . meow-digit-argument)
     '("9" . meow-digit-argument)
     '("0" . meow-digit-argument)
     '("/" . meow-keypad-describe-key)
     '("?" . meow-cheatsheet))

    (meow-normal-define-key
     '("@" . meow-kmacro-lines)
     '("%" . meow-query-replace)
     '("{" . backward-paragraph)
     '("}" . forward-paragraph)
     '("/" . meow-visit)
     '("0" . meow-expand-0)
     '("9" . meow-expand-9)
     '("8" . meow-expand-8)
     '("7" . meow-expand-7)
     '("6" . meow-expand-6)
     '("5" . meow-expand-5)
     '("4" . meow-expand-4)
     '("3" . meow-expand-3)
     '("2" . meow-expand-2)
     '("1" . meow-expand-1)
     '("-" . negative-argument)
     '(";" . meow-reverse)
     '("," . meow-inner-of-thing)
     '("." . meow-bounds-of-thing)
     '("[" . meow-beginning-of-thing)
     '("]" . meow-end-of-thing)
     '("a" . meow-append)
     '("b" . meow-back-word)
     '("B" . meow-back-symbol)
     '("c" . meow-change)
     '("d" . meow-kill)
     '("e" . meow-mark-word)
     '("E" . meow-mark-symbol)
     '("f" . meow-find)
     '("g" . meow-cancel-selection)
     '("G" . meow-grab)
     '("h" . meow-left)
     '("H" . meow-left-expand)
     '("i" . meow-insert)
     '("j" . meow-next)
     '("J" . meow-next-expand)
     '("k" . meow-prev)
     '("K" . meow-prev-expand)
     '("l" . meow-right)
     '("L" . meow-right-expand)
     '("m" . meow-join)
     '("n" . meow-search)
     '("o" . meow-open-below)
     '("O" . meow-open-above)
     '("p" . jst/meow-yank)
     '("q" . meow-quit)
     '("Q" . meow-goto-line)
     '("r" . meow-replace)
     '("R" . meow-swap-grab)
     '("s" . meow-block)
     '("S" . meow-to-block)
     '("t" . meow-till)
     '("u" . meow-undo)
     '("U" . meow-undo-in-selection)
     '("v" . meow-line)
     '("V" . meow-goto-line)
     '("w" . meow-next-word)
     '("W" . meow-next-symbol)
     '("x" . meow-delete)
     '("X" . meow-backward-delete)
     '("y" . meow-save)
     '("Y" . meow-sync-grab)
     '("z" . meow-pop-selection)
     '("'" . repeat)
     '("+" . er/expand-region)
     '("<escape>" . ignore)))


(add-to-list 'meow-mode-state-list '(blink-search-mode . insert))
(meow-thing-register 'single-quote '(regexp "'" "'") '(regexp "'" "'"))
(meow-thing-register 'angle '(regexp "<" ">") '(regexp "<" ">"))

(setq meow-char-thing-table
    '((?( . round) (?) . round)
      (?{ . curly) (?} . curly)
      (?[ . square) (?] . square)
      (?< . angle) (?> . angle)
      (?\" . string)
      (?' . single-quote)
      (?b . buffer)
      (?w . window)
      (?. . sentence)
      (?v . line)
      (?f . defun)
      (?p . paragraph)
      (?s . symbol)))


(meow-setup)
(meow-global-mode 1)
